<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.tedu.authuploadsystem.mapper.UserMapper">

    <!--UserLoginInfoVO getLoginInfoByUsername(String username);-->
    <select id="getLoginInfoByUsername" resultMap="LoginResultRM">
        SELECT
        <include refid="LoginQueryFields"/>
        FROM
        a_user
        LEFT JOIN a_user_role
        ON a_user.id = a_user_role.admin_id
        LEFT JOIN a_role_permission
        ON a_user_role.role_id = a_role_permission.role_id
        LEFT JOIN a_permission
        ON a_role_permission.permission_id = a_permission.id
        WHERE
        username=#{username}
    </select>

    <!--封装查询登录的字段-->
    <sql id="LoginQueryFields">
        <if test="true">
            a_user.id,
            a_user.username,
            a_user.password,
            a_user.enable,
            a_permission.value
        </if>
    </sql>

    <!-- 在1对多的查询中，List属性需要使用collection标签来配置 -->
    <!-- collection标签的property属性：封装查询结果的类型中的属性名，即List的属性名 -->
    <!-- collection标签的ofType属性：List的元素数据类型，取值为类型的全限定名 -->
    <!-- collection标签的子级：如何将查询结果中的数据封装成ofType类型的对象 -->
    <resultMap id="LoginResultRM" type="cn.tedu.authuploadsystem.pojo.vo.UserLoginInfoVO">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="enable" property="enable"/>
        <!--仅仅对表中的某一字段进行封装-->
        <collection property="permissions" ofType="java.lang.String">
            <constructor>
                <arg column="value"/>
            </constructor>
        </collection>
    </resultMap>
</mapper>
